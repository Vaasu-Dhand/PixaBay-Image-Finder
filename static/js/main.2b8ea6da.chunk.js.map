{"version":3,"sources":["components/navbar/Navbar.jsx","components/image-results/ImageResults.jsx","components/search/Search.jsx","App.js","index.js"],"names":["headings","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","useState","textIndex","setTextIndex","useEffect","setInterval","className","AppBar","position","Toolbar","Typography","variant","text","length","spring","presets","gentle","delay","inline","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","ImageResults","imageListContent","images","open","setOpen","currentImg","setCurrentImg","handleClose","style","marginTop","GridList","cellHeight","cols","map","image","GridListTile","key","id","src","largeImageURL","alt","tags","GridListTileBar","subtitle","user","actionIcon","IconButton","aria-label","type","onClick","img","Dialog","onClose","aria-labelledby","DialogContent","DialogActions","Button","search","margin","amount","Search","searchText","setSearchText","setAmount","setImages","handleChange","e","a","target","value","axios","get","hits","data","console","log","noValidate","autoComplete","TextField","label","onChange","select","MenuItem","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b8ea6da.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton';\r\nimport ReactTextTransition, { presets } from \"react-text-transition\";\r\n\r\nconst headings = ['PixaBay Image Finder', 'Image Search App', 'React.js & Material UI']\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  \r\n  // Hooks\r\n  const [textIndex, setTextIndex] = useState(0);\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setTextIndex(textIndex + 1)\r\n    }, 4000);\r\n  }, [textIndex])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            <b className='margin'>\r\n            <ReactTextTransition\r\n              text={headings[textIndex % headings.length]}\r\n              spring={presets.gentle}\r\n              className=\"big\"\r\n              delay={300}\r\n              inline\r\n            />  \r\n            </b> \r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Material UI\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ZoomIn from \"@material-ui/icons/ZoomIn\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: '100vw',\r\n    height: '15%',\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n}));\r\n\r\nfunction ImageResults({ images }) {\r\n  const classes = useStyles();\r\n\r\n  let imageListContent;\r\n\r\n  // Hooks\r\n  const [open, setOpen] = useState(false);\r\n  const [currentImg, setCurrentImg] = useState(\"\");\r\n\r\n  const handleClickOpen = (img) => {\r\n    setCurrentImg(img);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  if (images) {\r\n    imageListContent = (\r\n      <div className={classes.root} style={{ marginTop: \"20px\" }} >\r\n        <GridList cellHeight={200} className={classes.gridList} cols={3}>\r\n          {images.map((image) => (\r\n            <GridListTile key={image.id}>\r\n              <img src={image.largeImageURL} alt={image.tags} />\r\n              <GridListTileBar\r\n                title={image.tags}\r\n                subtitle={\r\n                  <span>\r\n                    by: <b> {image.user} </b>\r\n                  </span>\r\n                }\r\n                actionIcon={\r\n                  <IconButton\r\n                    aria-label={`info about ${image.type}`}\r\n                    className={classes.icon}\r\n                    onClick={() => handleClickOpen(image.largeImageURL)}\r\n                  >\r\n                    <ZoomIn />\r\n                  </IconButton>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n        {/* Dialog */}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogContent>\r\n            <img src={currentImg} alt=\"\" style={{ width: \"100%\" }} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  } else {\r\n    imageListContent = null;\r\n  }\r\n\r\n  return <div>{imageListContent}</div>;\r\n}\r\n\r\nImageResults.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageResults;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ImageResults from '../image-results/ImageResults'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n      margin: theme.spacing(1),\r\n      width: \"100ch\",\r\n  },\r\n  amount: {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n  },\r\n}));\r\n\r\nfunction Search() {\r\n  // Variables\r\n  const apiUrl = \"https://pixabay.com/api/\";\r\n  const apiKey = \"17917329-f815a9278278de99d02a1d351\";\r\n  const imagesAmount = [5, 10, 15, 30, 50];\r\n  \r\n  // Hooks\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [amount, setAmount] = useState(15);\r\n  const [images, setImages] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChange = async (e) => {\r\n    const search = e.target.value\r\n    if (search === '') {\r\n      setSearchText('')\r\n      setImages([])\r\n    } else {\r\n      setSearchText(search)\r\n      const { data :{hits} } = await axios.get(`${apiUrl}?key=${apiKey}&q=${search}&image_type=photo&per_page=${amount}&safesearch`); // Double Destructuring\r\n      console.log(hits);\r\n      setImages(hits)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='margin'>\r\n    <form className={classes.search} noValidate autoComplete=\"off\" style={{display: \"inline\"}} >\r\n      <span>\r\n\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Search for Images\"\r\n        variant=\"outlined\"\r\n        className={`${classes.search} search`}\r\n        value={searchText}\r\n        onChange={(e) => handleChange(e)}\r\n      />\r\n      <TextField\r\n        id=\"outlined-select-currency\"\r\n        select\r\n        label=\"Amount\"\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n        variant=\"outlined\"\r\n        className={`${classes.amount}`}\r\n      >\r\n        {imagesAmount.map((amount) => (\r\n          <MenuItem key={amount} value={amount}>\r\n            {amount}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      </span>\r\n      \r\n    </form>\r\n    <br/>\r\n    {images.length > 0 ? (<ImageResults images={images} />) : null}\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\nimport './App.css';\n// Components\nimport NavBar from './components/navbar/Navbar'\nimport Search from './components/search/Search'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <NavBar />\n          <Search />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,  // Uncomment Strict Mode Tags and remove comma when Functionality Fixed\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}